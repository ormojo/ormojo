import ormojo from 'ormojo'
import Blackbird from 'blackbird-promises'
import es_client from './es_client'
import ESQ from 'esq'
import { ESBackend } from '../..'

export default makeCorpus() ->
  logger = console.log.bind(console)
  c = new ormojo.Corpus({
    Promise: {
      resolve: (x) -> Blackbird.resolve(x)
      reject: (x) -> Blackbird.reject(x)
      all: (x) -> Blackbird.all(x)
    }
    log: {
      trace: logger
    }
    backends: {
      'main': new ESBackend(es_client)
    }
  })

  Widget = c.createModel({
    name: 'Widget'
    fields: {
      id: { type: ormojo.STRING }
      name: { type: ormojo.STRING, defaultValue: 'nameless' }
      qty: { type: ormojo.INTEGER, defaultValue: -> 1 + 1 }
      tags: {
        type: ormojo.ARRAY(ormojo.STRING)
        defaultValue: -> []
        elasticsearch: {
          mapping: (new ESQ).query('fields', 'raw', { type: 'string', index: 'not_analyzed'})
        }
      }
    }
  })

  BoundWidget = Widget.forBackend('main', {
    index: 'widget'
    type: 'widget'
  })

  { corpus: c, Widget: BoundWidget }
