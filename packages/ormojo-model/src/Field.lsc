class Field:
  constructor(name, spec) ->
    this.fromSpec(name, spec)

  fromSpec(name, spec) ->
    this.name = name
    this.spec = spec

    if typeof(name) != 'string': throw new Error("Invalid field name: must be a string")
    if name.substr(0, 1) == '_': throw new Error(`Invalid field name \`${name}\`: cannot begin with _`)
    if reservedWords[name]: throw new Error(`Invalid field name \`${name}\`: reserved word`)
    if not spec?.type: throw new Error(`Invalid field spec for \`${name}\`: must specify a type`)

    Object.assign(this, spec)
    this.defaulter = this.spec.defaultValue

    this

  fromField(field) ->
    this.fromSpec(field.name, field.spec)
    this
