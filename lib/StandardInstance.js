// Generated by CoffeeScript 1.11.1
(function() {
  var BoundInstance, applyModelPropsToInstanceClass, createStandardInstanceClassForBoundModel,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BoundInstance = require('./BoundInstance');

  applyModelPropsToInstanceClass = function(boundModel, clazz) {
    var k, ref, v;
    ref = boundModel.instanceProps;
    for (k in ref) {
      v = ref[k];
      if (v) {
        (function(k, v) {
          return Object.defineProperty(clazz.prototype, k, {
            enumerable: true,
            configurable: true,
            get: function() {
              return this.get(k);
            },
            set: function(val) {
              return this.set(k, val);
            }
          });
        })(k, v);
      }
    }
    return void 0;
  };

  createStandardInstanceClassForBoundModel = function(bm) {
    var StandardInstance;
    StandardInstance = (function(superClass) {
      extend(StandardInstance, superClass);

      function StandardInstance() {
        return StandardInstance.__super__.constructor.apply(this, arguments);
      }

      return StandardInstance;

    })(BoundInstance);
    applyModelPropsToInstanceClass(bm, StandardInstance);
    return StandardInstance;
  };

  module.exports = {
    applyModelPropsToInstanceClass: applyModelPropsToInstanceClass,
    createStandardInstanceClassForBoundModel: createStandardInstanceClassForBoundModel
  };

}).call(this);
