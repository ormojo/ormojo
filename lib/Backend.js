// Generated by CoffeeScript 1.11.1
(function() {
  var Backend;

  Backend = (function() {
    function Backend() {}

    Backend.prototype._initialize = function(corpus, name) {
      this.corpus = corpus;
      this.name = name;
      return this.initialize();
    };


    /* !pragma coverage-skip-next */

    Backend.prototype.initialize = function() {};


    /* !pragma coverage-skip-next */

    Backend.prototype.bindModel = function(model) {
      throw new Error('Backend: `bindModel` called on abstract backend.');
    };


    /* !pragma coverage-skip-next */

    Backend.prototype.save = function(instance, boundModel) {
      return this.corpus.Promise.reject(new Error('Backend: saveInstance called on abstract backend.'));
    };


    /* !pragma coverage-skip-next */

    Backend.prototype.destroy = function(instance, boundModel) {
      return this.corpus.Promise.reject(new Error('Backend: destroyInstance called on abstract backend.'));
    };


    /* !pragma coverage-skip-next */

    Backend.prototype.findById = function(boundModel, id) {
      return this.corpus.Promise.reject(new Error('Backend: `findById` called on abstract backend.'));
    };


    /* !pragma coverage-skip-next */

    Backend.prototype.find = function(boundModel, options) {
      return this.corpus.Promise.reject(new Error('Backend: `find` called on abstract backend.'));
    };


    /* !pragma coverage-skip-next */

    Backend.prototype.findAll = function(boundModel, options) {
      return this.corpus.Promise.reject(new Error('Backend: `findAll` called on abstract backend.'));
    };

    return Backend;

  })();

  module.exports = Backend;

}).call(this);
