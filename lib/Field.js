// Generated by CoffeeScript 1.11.1
(function() {
  var Field, reservedWords;

  reservedWords = require('./reservedWords');

  Field = (function() {
    function Field() {}

    Field.prototype.fromSpec = function(name, spec) {
      var ref;
      this.name = name;
      this.spec = spec;
      if (typeof this.name !== 'string') {
        throw new Error("Invalid field name: must be a string");
      }
      if (this.name.substr(0, 1) === '_') {
        throw new Error("Invalid field name `" + this.name + "`: cannot begin with _");
      }
      if (reservedWords[this.name]) {
        throw new Error("Invalid field name `" + this.name + "`: reserved word");
      }
      if (!((ref = this.spec) != null ? ref.type : void 0)) {
        throw new Error("Invalid field spec for `" + this.name + "`: must specify a type");
      }
      this.type = this.spec.type;
      this.get = this.spec.get;
      this.set = this.spec.set;
      this["default"] = this.spec["default"];
      return this;
    };

    Field.prototype.fromField = function(field) {
      this.fromSpec(field.name, field.spec);
      return this;
    };

    Field.prototype.getBackendFieldName = function() {
      return this.name;
    };

    Field.prototype._getDefault = function(instance) {
      if (this["default"] != null) {
        if (typeof this["default"] === 'function') {
          return this["default"](instance);
        } else {
          return this["default"];
        }
      } else {
        return void 0;
      }
    };

    return Field;

  })();

  module.exports = Field;

}).call(this);
