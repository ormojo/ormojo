// Generated by CoffeeScript 1.11.1
var Field;

import reservedWords from './reservedWords';

export default Field = function () {
  function Field() {}

  Field.prototype.fromSpec = function (name, spec) {
    var ref;
    this.name = name;
    this.spec = spec;
    if (typeof this.name !== 'string') {
      throw new Error("Invalid field name: must be a string");
    }
    if (this.name.substr(0, 1) === '_') {
      throw new Error("Invalid field name `" + this.name + "`: cannot begin with _");
    }
    if (reservedWords[this.name]) {
      throw new Error("Invalid field name `" + this.name + "`: reserved word");
    }
    if (!((ref = this.spec) != null ? ref.type : void 0)) {
      throw new Error("Invalid field spec for `" + this.name + "`: must specify a type");
    }
    this.type = this.spec.type;
    this.get = this.spec.get;
    this.set = this.spec.set;
    this.defaulter = this.spec.defaultValue;
    return this;
  };

  Field.prototype.fromField = function (field) {
    this.fromSpec(field.name, field.spec);
    return this;
  };

  Field.prototype.getBackendFieldName = function () {
    return this.name;
  };

  Field.prototype._getDefault = function (instance) {
    if (this.defaulter != null) {
      if (typeof this.defaulter === 'function') {
        return this.defaulter(instance);
      } else {
        return this.defaulter;
      }
    } else {
      return void 0;
    }
  };

  return Field;
}();