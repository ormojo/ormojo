// Generated by CoffeeScript 1.11.1
var Instance;

export default Instance = function () {
  function Instance(boundModel) {
    this.boundModel = boundModel;
  }

  Instance.prototype.__applyDefaults = function () {
    var def, field, n, ref;
    ref = this.boundModel.getFields();
    for (n in ref) {
      field = ref[n];
      if ((def = field._getDefault(this)) != null) {
        this.set(field.name, def);
      }
    }
    return this;
  };

  /* !pragma coverage-skip-next */

  Instance.prototype.getDataValue = function (key) {
    throw new Error('ormojo: `getDataValue` called on abstract instance');
  };

  /* !pragma coverage-skip-next */

  Instance.prototype.setDataValue = function (key, value) {
    throw new Error('ormojo: `setDataValue` called on abstract instance');
  };

  /* !pragma coverage-skip-next */

  Instance.prototype.get = function (key) {
    throw new Error('ormojo: `get` called on abstract instance');
  };

  /* !pragma coverage-skip-next */

  Instance.prototype.set = function (key, value) {
    throw new Error('ormojo: `set` called on abstract instance');
  };

  /* !pragma coverage-skip-next */

  Instance.prototype.changed = function (key) {
    throw new Error('ormojo: `changed` called on abstract instance');
  };

  /* !pragma coverage-skip-next */

  Instance.prototype.save = function () {
    return this.boundModel.corpus.Promise.reject(new Error('ormojo: `save` called on abstract instance'));
  };

  /* !pragma coverage-skip-next */

  Instance.prototype.destroy = function () {
    return this.boundModel.corpus.Promise.reject(new Error('ormojo: `destroy` called on abstract instance'));
  };

  return Instance;
}();