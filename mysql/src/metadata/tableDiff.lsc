import { MySQLTable } from './table'
import { MySQLTables } from './tables'

// List of ALTER TABLE clauses to turn the RHS into the LHS
export getTableDiff(lhs: MySQLTable, rhs: MySQLTable) ->
  differences = []
  // Index drops must be done in separate ALTER clauses.
  indexDrops = []

  // Diff fields
  for key colKey, val col in lhs.columns:
    if rhs.columns[colKey]:
      if not col.hasSameDefinition(rhs.columns[colKey]):
        differences.push(`MODIFY COLUMN ${col._toDDL!}`)
    else:
      differences.push(`ADD COLUMN ${col._toDDL!}`)

  for key colKey, val col in rhs.columns:
    if not lhs.columns[colKey]:
      differences.push(`DROP COLUMN ${col.quotedName}`)

  // Diff indices
  for key idxKey, val idx in lhs.indices:
    if rhs.indices[idxKey]:
      if not idx.hasSameDefinition(rhs.indices[idxKey]):
        indexDrops.push(rhs.indices[idxKey]._toAlterDropDDL!)
        differences.push(idx._toAlterAddDDL!)
    else:
      differences.push(idx._toAlterAddDDL!)

  for key idxKey, val idx in rhs.indices:
    if not lhs.indices[idxKey]:
      indexDrops.push(idx._toAlterDropDDL!)

  ddl = if differences.length > 0:
    `ALTER TABLE ${rhs.quotedName} ${differences.join(',')}`
  indexDropDDL = if indexDrops.length > 0:
    `ALTER TABLE ${rhs.quotedName} ${indexDrops.join(',')}`
  different = Boolean(ddl or indexDropDDL)

  { target: lhs.toJSON(), prior: rhs.toJSON(), different, ddl, indexDropDDL }

// List of ALTER TABLE queries to turn the entire RHS tableset into
// a best match for the LHS
export getTablesDiff(lhs: MySQLTables, rhs: MySQLTables) ->
  diffs = []
  ddl = []

  for key tableKey, val table in lhs.tables:
    if rhs.tables[tableKey]:
      tableDiff = getTableDiff(table, rhs.tables[tableKey])
      diffs.push(tableDiff)
      if tableDiff.different:
        if tableDiff.indexDropDDL: ddl.push(tableDiff.indexDropDDL)
        ddl.push(tableDiff.ddl)
    else:
      createDDL = table._toCreateDDL()
      diffs.push({target: table.toJSON(), prior: null, different: true, ddl: createDDL})
      ddl.push(createDDL)

  { diffs, ddl }
