import { subscribeObserverAdapter, defineObservable, transformNext } from '../util'

export memoize(priorObservable, n = 1) ->
  subscribe = subscribeObserverAdapter((observer) ->
    memory = []
    priorObservable.subscribe(
      transformNext(observer, (x): void ->
        memory.unshift(x)
        observerWillSee = memory.slice()
        if memory.length > n: memory.pop()
        observer.next?(observerWillSee)
      )
    )
  )

  defineObservable({subscribe})
