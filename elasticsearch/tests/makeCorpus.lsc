import { entity, field, types, listOf, Entity } from '@ormojo/ephraim'
import es_client from './es_client'
import { QueryDsl } from '..'
import { createBackend } from './backend'

export makeCorpus(extraName) ->
  backend = createBackend!

  @entity({name: 'Widget'}) class Widget extends Entity:
    @field(types.string) id
    @field(types.text) name = 'nameless'
    @field(types.integer) qty = 2
    @field(listOf(types.text)) tags = []

  backend.bind(Widget, {
    index: `widget_${extraName}`
    type: `widget_${extraName}`
    fields: {
      tags: {
        mapping: (new QueryDsl).q('fields', 'raw', { type: 'keyword'}).body
      }
    }
  })

  { backend, Widget }

export cleanupCorpus(extraName) -/>
  try:
    <- es_client.indices.deleteAlias({
      index: '_all'
      name: [`widget_${extraName}`]
    }, { ignore: [404] })
    <- es_client.indices.delete({
      index: [`widget_${extraName}_*`]
    }, { ignore: [ 404 ] })
  catch err:
    console.error("error while cleaning up", err)
